<Window x:Class="MyMusic.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MyMusic"
        mc:Ignorable="d"
        Title="My Music" Height="433.5" Width="800" Loaded="Window_Loaded" Closed="Window_Closed" KeyUp="Window_KeyUp"
	   Icon="Icons/music.png"
	   >
	<Window.Resources>
		<SolidColorBrush x:Key="SliderThumb.Static.Foreground" Color="#FF1E90FF"/>
		<SolidColorBrush x:Key="SliderThumb.MouseOver.Background" Color="#FF8744FB"/>
		<SolidColorBrush x:Key="SliderThumb.MouseOver.Border" Color="#FF8744FB"/>
		<SolidColorBrush x:Key="SliderThumb.Pressed.Background" Color="#FF8744FB"/>
		<SolidColorBrush x:Key="SliderThumb.Pressed.Border" Color="#FF8744FB"/>
		<SolidColorBrush x:Key="SliderThumb.Disabled.Background" Color="#FFF0F0F0"/>
		<SolidColorBrush x:Key="SliderThumb.Disabled.Border" Color="#FFD9D9D9"/>
		<SolidColorBrush x:Key="SliderThumb.Static.Background" Color="#FFFF0000"/>
		<SolidColorBrush x:Key="SliderThumb.ThumbAfter.Foreground" Color="#FF1E90FF"/>
		<SolidColorBrush x:Key="SliderThumb.ThumbBefore.Foreground" Color="#FFFFFFFF"/>
		<SolidColorBrush x:Key="SliderThumb.Static.Border" Color="#FFFF0000"/>
		<ControlTemplate x:Key="SliderThumbHorizontalTop" TargetType="{x:Type Thumb}">
			<Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
				<Path x:Name="grip" Data="M 0,6 C0,6 5.5,0 5.5,0 5.5,0 11,6 11,6 11,6 11,18 11,18 11,18 0,18 0,18 0,18 0,6 0,6 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
			</Grid>
			<ControlTemplate.Triggers>
				<Trigger Property="IsMouseOver" Value="true">
					<Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
					<Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
				</Trigger>
				<Trigger Property="IsDragging" Value="true">
					<Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
					<Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
				</Trigger>
				<Trigger Property="IsEnabled" Value="false">
					<Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
					<Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
		<ControlTemplate x:Key="SliderThumbHorizontalBottom" TargetType="{x:Type Thumb}">
			<Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
				<Path x:Name="grip" Data="M 0,12 C0,12 5.5,18 5.5,18 5.5,18 11,12 11,12 11,12 11,0 11,0 11,0 0,0 0,0 0,0 0,12 0,12 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
			</Grid>
			<ControlTemplate.Triggers>
				<Trigger Property="IsMouseOver" Value="true">
					<Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
					<Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
				</Trigger>
				<Trigger Property="IsDragging" Value="true">
					<Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
					<Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
				</Trigger>
				<Trigger Property="IsEnabled" Value="false">
					<Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
					<Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
		<SolidColorBrush x:Key="SliderThumb.Track.Border" Color="#FFB9B6B6"/>
		<SolidColorBrush x:Key="SliderThumb.Track.Background" Color="#FFE7EAEA"/>
		<Style x:Key="RepeatButtonAfter" TargetType="{x:Type RepeatButton}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Rectangle SnapsToDevicePixels="True" Fill="{StaticResource SliderThumb.ThumbAfter.Foreground}" Height="4"  Margin="0,1.8,0,0" Grid.Row="1" VerticalAlignment="center"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="RepeatButtonBefore" TargetType="{x:Type RepeatButton}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Border BorderBrush="{StaticResource SliderThumb.Track.Border}" BorderThickness="0,1,1,1" Background="{StaticResource SliderThumb.Track.Background}" Height="4.0" Margin="-1,5.5,5,5" Grid.Row="1" VerticalAlignment="center"></Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
			<Ellipse x:Name="grip" Height="15" Width="15" Fill="{StaticResource SliderThumb.Static.Foreground}" Stretch="Fill" SnapsToDevicePixels="True" UseLayoutRounding="True" VerticalAlignment="Center" HorizontalAlignment="Center">
			</Ellipse>
			<ControlTemplate.Triggers>
				<Trigger Property="IsMouseOver" Value="true">
					<Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
					<Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
				</Trigger>
				<Trigger Property="IsDragging" Value="true">
					<Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
					<Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
				</Trigger>
				<Trigger Property="IsEnabled" Value="false">
					<Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
					<Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
		<ControlTemplate x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
			<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="10.322"/>
						<RowDefinition Height="4.678"/>
						<RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>
					<TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,6.322" Placement="Top" Grid.Row="0" Visibility="Collapsed" Grid.RowSpan="2"/>
					<TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,-6" Placement="Bottom" Grid.Row="3" Visibility="Collapsed"/>
					<Border x:Name="TrackBackground" BorderBrush="{StaticResource SliderThumb.Track.Border}" BorderThickness="0,1" Background="{StaticResource SliderThumb.Track.Background}" Height="4.0" Margin="5,6,5,0" Grid.Row="1" VerticalAlignment="center">
						<Canvas Margin="-6,-1">
							<Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4.0" Visibility="Hidden"/>
						</Canvas>
					</Border>
					<Track x:Name="PART_Track" Grid.Row="1" Grid.RowSpan="2">
						<Track.DecreaseRepeatButton>
							<RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonAfter}"/>
						</Track.DecreaseRepeatButton>
						<Track.IncreaseRepeatButton>
							<RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonBefore}"/>
						</Track.IncreaseRepeatButton>
						<Track.Thumb>
							<Thumb x:Name="Thumb" Focusable="False" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbHorizontalDefault}" VerticalAlignment="Bottom"/>
						</Track.Thumb>
					</Track>
				</Grid>
			</Border>
			<ControlTemplate.Triggers>
				<Trigger Property="TickPlacement" Value="TopLeft">
					<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
					<Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalTop}"/>
					<Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0"/>
				</Trigger>
				<Trigger Property="TickPlacement" Value="BottomRight">
					<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
					<Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalBottom}"/>
					<Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
				</Trigger>
				<Trigger Property="TickPlacement" Value="Both">
					<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
					<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
				</Trigger>
				<Trigger Property="IsSelectionRangeEnabled" Value="true">
					<Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
				</Trigger>
				<Trigger Property="IsKeyboardFocused" Value="true">
					<Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>

		<Style x:Key="SliderStyle" TargetType="{x:Type Slider}">
			<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="Foreground" Value="{StaticResource SliderThumb.Static.Foreground}"/>
			<Setter Property="Template" Value="{StaticResource SliderHorizontal}"/>
		</Style>
		<Style x:Key="FocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
		<SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
		<SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FF8744FB"/>
		<SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
		<SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
		<SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
		<SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
		<SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
		<SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
		<Style x:Key="PlayButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
			<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border CornerRadius="90" x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
							<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="RepeatButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
			<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border CornerRadius="90" x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
							<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
							</Trigger>
							<Trigger Property="Tag" Value="chose">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="RectangleButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
			<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
							<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Storyboard x:Key="SelectedItemAnimation">
			<ColorAnimation Duration="0:0:1"
						 Storyboard.TargetName="Bd"
						 Storyboard.TargetProperty="Background.Color" From="Cyan" To="LightYellow" RepeatBehavior="Forever"/>
			<DoubleAnimation Storyboard.TargetName="RotateImage"
						  Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" 
						  From="0" To="360" BeginTime="00:00:00.000" Duration="00:00:05.000"  RepeatBehavior="Forever"/>
		</Storyboard>
		<local:NameConverter x:Key="converter"></local:NameConverter>
		<SolidColorBrush x:Key="Item.MouseOver.Background" Color="#668744FB"/>
		<SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
		<SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#7200F3FF"/>
		<SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FF26A0DA"/>
		<SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#7200F3FF"/>
		<SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>
		<Style x:Key="MusicListBoxItem" TargetType="{x:Type ListBoxItem}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="Padding" Value="4,1"/>
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
							<StackPanel Orientation="Horizontal">
								<Image Name="RotateImage" RenderTransformOrigin=".5,.5" Source="Icons/song.png" Height="20" Width="20" RenderOptions.BitmapScalingMode="HighQuality">
									<Image.RenderTransform>
										<RotateTransform Angle="0"  />
									</Image.RenderTransform>
								</Image>
								<TextBlock Name="musicName" Text="{Binding Name, Converter={StaticResource converter}}" Height="20" FontSize="15" Margin="5,0,0,0" />
							</StackPanel>

						</Border>

						<ControlTemplate.Triggers>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsMouseOver" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
								<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="Selector.IsSelectionActive" Value="False"/>
									<Condition Property="IsSelected" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
								<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
								<Setter Property="RenderTransform" TargetName="RotateImage">
									<Setter.Value>
										<RotateTransform Angle="0" />
									</Setter.Value>
								</Setter>
								<MultiTrigger.EnterActions>
									<BeginStoryboard Name="Animation1" Storyboard="{StaticResource SelectedItemAnimation}">
									</BeginStoryboard>
								</MultiTrigger.EnterActions>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="Selector.IsSelectionActive" Value="True"/>
									<Condition Property="IsSelected" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
								<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
								<Setter Property="RenderTransform" TargetName="RotateImage">
									<Setter.Value>
										<RotateTransform Angle="0" />
									</Setter.Value>
								</Setter>
								<MultiTrigger.EnterActions>
									<BeginStoryboard Name="Animation2" Storyboard="{StaticResource SelectedItemAnimation}">
									</BeginStoryboard>
								</MultiTrigger.EnterActions>
							</MultiTrigger>

							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="Item.MouseOver.Background2" Color="#1F26A0DA"/>
		<SolidColorBrush x:Key="Item.SelectedInactive.Background2" Color="#3DDADADA"/>
		<SolidColorBrush x:Key="Item.SelectedActive.Background2" Color="#3D26A0DA"/>
		<Style x:Key="ListListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="Padding" Value="4,1"/>
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="20"></ColumnDefinition>
									<ColumnDefinition Width="Auto"></ColumnDefinition>
								</Grid.ColumnDefinitions>
								<Image Grid.Column="0" Name="playlistIcon" Source="Icons/playlist.png" Height="20" Width="20" RenderOptions.BitmapScalingMode="HighQuality" ></Image>
								<TextBox Focusable="False" Grid.Column="1" Cursor="Arrow" IsReadOnly="True" IsReadOnlyCaretVisible="false" Name="playlistName" Text="{Binding PlayListName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,0,0,0" Height="20" FontSize="15" Background="Transparent" BorderThickness="0" GotFocus="PlaylistName_GotFocus" />
							</Grid>
							<Border.ContextMenu>
								<ContextMenu>
									<MenuItem Name="RenameMenuItem" Header="Rename" Click ="PlaylistRenameMenuItem_Click" ></MenuItem>
									<MenuItem Header="Delete" Click ="PlaylistDeleteMenuItem_Click"></MenuItem>
								</ContextMenu>
							</Border.ContextMenu>
						</Border>

						<ControlTemplate.Triggers>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition SourceName="RenameMenuItem" Property="Tag" Value="Clicked"/>
									<Condition Property="Selector.IsSelectionActive" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter TargetName="playlistName" Property="Focusable" Value="True"></Setter>
								<Setter TargetName="playlistName" Property="IsReadOnlyCaretVisible" Value="True"></Setter>
								<Setter TargetName="playlistName" Property="IsReadOnly" Value="False"></Setter>
								<Setter TargetName="playlistName" Property="Cursor" Value="IBeam"></Setter>
								<Setter TargetName="playlistName" Property="FocusManager.FocusedElement" Value="{Binding ElementName=playlistName}"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsMouseOver" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
								<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="Selector.IsSelectionActive" Value="False"/>
									<Condition Property="IsSelected" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
								<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
								<Setter Property="Source" TargetName="playlistIcon" Value="Icons/choose icon.png"></Setter>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="Selector.IsSelectionActive" Value="True"/>
									<Condition Property="IsSelected" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
								<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
								<Setter Property="Source" TargetName="playlistIcon" Value="Icons/choose icon.png"></Setter>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

	</Window.Resources>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="20"></RowDefinition>
			<RowDefinition Height="15*"></RowDefinition>
			<RowDefinition Height="110"></RowDefinition>
		</Grid.RowDefinitions>
		<Menu Grid.Row="0" Background="#FF00B9FF" BorderBrush="#FF0068FF" BorderThickness="1" >
			<MenuItem Header="New playlist" Click="newPlaylistMenuItem_Click" BorderBrush="#FF0068FF" BorderThickness="0,0,1,0" FontSize="15" Height="20"></MenuItem>
			<MenuItem Header="Add musics" Click="addSongMenuItem_Click" BorderBrush="#FF0068FF" BorderThickness="0,0,1,0" FontSize="15" Height="20"></MenuItem>
		</Menu>
		<DockPanel Background="Azure" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight}" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth}" Canvas.Top="18" LastChildFill="True" Grid.Row="1">
			<Border BorderThickness="1" BorderBrush="#FF00B9FF">
				<DockPanel Width="160" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight}" LastChildFill="True">
					<TextBlock Text="Playlists" FontSize="15" Background="#FF00B9FF" DockPanel.Dock="Top" Padding="5,0,0,0" Height="20"></TextBlock>
					<ListBox Name="playlistListBox" SelectionChanged="playlistListBox_SelectionChanged" Background="Transparent" ItemContainerStyle="{DynamicResource ListListBoxItemStyle}">
						
						<!--<ListBox.ContextMenu>
							<ContextMenu>
								<MenuItem Header="Rename" Click="PlaylistRenameMenuItem_Click"></MenuItem>
								<MenuItem Header="Delete" Click="PlaylistDeleteMenuItem_Click"></MenuItem>
							</ContextMenu>
						</ListBox.ContextMenu>-->
					</ListBox>
				</DockPanel>
			</Border>
			<ListBox Name="musicListBox" BorderThickness="0,1,1,1" Width="Auto" DockPanel.Dock="Right" Background="Azure" SelectionChanged="MusicListBox_SelectionChanged" BorderBrush="#FF00B9FF" ItemContainerStyle="{DynamicResource MusicListBoxItem}" >
				<ListBox.ContextMenu>
					<ContextMenu>
						<MenuItem Header="Delete" Click ="MusicDeleteMenuItem_Click"></MenuItem>
					</ContextMenu>
				</ListBox.ContextMenu>
			</ListBox>
		</DockPanel>
		<Border Grid.Row="2" Background="#FF8CDAEE">
			<Grid Name="musicGrid" Margin="10,10,10,0">
				<Grid.RowDefinitions>
					<RowDefinition Height="1.2*"></RowDefinition>
					<RowDefinition Height="1*"></RowDefinition>
					<RowDefinition Height="5*"></RowDefinition>
				</Grid.RowDefinitions>
				<Slider Name="progressSlider" Grid.Row="0" VerticalAlignment="Center"  Maximum="100000" Style="{DynamicResource SliderStyle}" IsMoveToPointEnabled = "true" ValueChanged="ProgressSlider_ValueChanged"></Slider>
				<StackPanel Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
					<TextBlock Name="currentPosition" Text="00:00"></TextBlock>
					<TextBlock Text=" / "></TextBlock>
					<TextBlock Name="maxPosition" Text="00:00"></TextBlock>
				</StackPanel>
				<StackPanel Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
					<Border CornerRadius="25" BorderThickness="1" BorderBrush="SteelBlue" Margin="3" Background="#FF40B8D6" Padding="0,0,5,0">
						<StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
							<Grid>
								<Button Visibility="Hidden" Tag="chose" Name="selfRepeatButton" Click="SelfRepeat_Click"  VerticalAlignment="Center" HorizontalAlignment="Center" Height="30" Width="30" Background="Transparent" Padding="5" BorderThickness="0" Margin="5" Style="{DynamicResource RepeatButtonStyle}">
									<Image Source="Icons/repeat0.png" Stretch="Fill" RenderOptions.BitmapScalingMode="HighQuality"></Image>
								</Button>
								<Button Name="infinityRepeatButton" Click="SequenRepeat_Click" VerticalAlignment="Center" HorizontalAlignment="Center" Height="30" Width="30" Background="Transparent" Padding="5" BorderThickness="0" Margin="5" Style="{DynamicResource RepeatButtonStyle}">
									<Image Source="Icons/repeat1.png" Stretch="Fill" RenderOptions.BitmapScalingMode="HighQuality"></Image>
								</Button>
							</Grid>
							<Button Name="randomNextButton" Click="RandomNext_Click" VerticalAlignment="Center" HorizontalAlignment="Center" Height="30" Width="30" Background="Transparent" Padding="5" BorderThickness="0" Margin="5" Style="{DynamicResource RepeatButtonStyle}">
								<Image Source="Icons/repeat3.png" Stretch="Fill" RenderOptions.BitmapScalingMode="HighQuality"></Image>
							</Button>
							<Button Name="stopButton" Click="StopButton_Click" VerticalAlignment="Center" HorizontalAlignment="Center" Height="30" Width="30" Background="Transparent" Padding="5" BorderThickness="0" Margin="5"  Style="{DynamicResource PlayButtonStyle}">
								<Image Source="Icons/stop.png" Stretch="Fill" RenderOptions.BitmapScalingMode="HighQuality"></Image>
							</Button>

							<Button VerticalAlignment="Center" HorizontalAlignment="Center" Height="25" Width="40" Background="Transparent" Padding="3" BorderThickness="0" Margin="5" Style="{DynamicResource RectangleButtonStyle}" Click="PreviousButton_Click">
								<Image Source="Icons/previous button.png" Stretch="Fill" RenderOptions.BitmapScalingMode="HighQuality"></Image>
							</Button>
							<Button Name="playButton" VerticalAlignment="Center" HorizontalAlignment="Center" Height="50" Width="50" Background="Transparent" Padding="5" BorderThickness="0" Margin="5" Style="{DynamicResource PlayButtonStyle}" Click="PlayButton_Click">
								<Image Name="playButtonIcon" Source="Icons/play button.png" Stretch="Fill" RenderOptions.BitmapScalingMode="HighQuality">
								</Image>
							</Button>
							<Button VerticalAlignment="Center" HorizontalAlignment="Center" Height="25" Width="40" Background="Transparent" Padding="3" BorderThickness="0" Margin="5" Style="{DynamicResource RectangleButtonStyle}" Click="NextButton_Click">
								<Image Source="Icons/next button.png" Stretch="Fill" RenderOptions.BitmapScalingMode="HighQuality"></Image>
							</Button>
							<Button Name="muteButton" VerticalAlignment="Center" HorizontalAlignment="Center" Height="25" Width="25" Background="Transparent" BorderThickness="0" Padding="3" Margin="5" Style="{DynamicResource PlayButtonStyle}" Click="MuteButton_Click">
								<Image Name="muteButtonIcon" Source="Icons/volume.png" Stretch="Fill" RenderOptions.BitmapScalingMode="HighQuality"></Image>
							</Button>
							<Slider Width="80" HorizontalAlignment="Center" Name="volumeSlider" VerticalAlignment="Center"  Maximum="100" Style="{DynamicResource SliderStyle}" IsMoveToPointEnabled = "true" ValueChanged="MuteSlider_ValueChanged"></Slider>
						</StackPanel>

					</Border>

				</StackPanel>

			</Grid>
		</Border>
	</Grid>
</Window>
